services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HEX_DATA_SERVICE_URL=http://hex-data-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3002
      - JWT_SECRET=your-super-secret-jwt-key-change-this
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:19006
    depends_on:
      - hex-data-service
      - notification-service
    networks:
      - hex-network
    restart: unless-stopped

  # Hex Data Service
  hex-data-service:
    build:
      context: .
      dockerfile: ./services/hex-data-service/Dockerfile
      target: production
    ports:
      - "3001:3001"
      - "9000:9000"  # TCP port
    environment:
      - NODE_ENV=development
      - PORT=3001
      - TCP_PORT=9000
      - LOG_DIR=/app/logs
    volumes:
      - hex-logs:/app/logs
    networks:
      - hex-network
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./services/notification-service/Dockerfile
      target: production
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      # Firebase configuration (set these for push notifications)
      # - FIREBASE_SERVICE_ACCOUNT_KEY={}
      # - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-key.json
      # Web Push configuration (set these for web notifications)
      # - VAPID_PUBLIC_KEY=your_vapid_public_key
      # - VAPID_PRIVATE_KEY=your_vapid_private_key
      # - VAPID_SUBJECT=mailto:admin@yourdomain.com
    depends_on:
      - redis
    networks:
      - hex-network
    restart: unless-stopped

  # Redis for notification queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hex-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - hex-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  hex-logs:
    driver: local
  redis-data:
    driver: local

networks:
  hex-network:
    driver: bridge

# Development override file can be used with:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up