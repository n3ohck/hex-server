# Environment Variables Example
# Copy this file to .env and update with your values

# ===================
# API Gateway
# ===================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=24h
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:19006,http://localhost:8080

# Service URLs (for Docker, use service names)
HEX_DATA_SERVICE_URL=http://localhost:3001
NOTIFICATION_SERVICE_URL=http://localhost:3002

# ===================
# Hex Data Service
# ===================
TCP_PORT=9000
LOG_DIR=/var/www/html/hex-server

# ===================
# Notification Service
# ===================

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Firebase Configuration (for mobile push notifications)
# Get this from Firebase Console > Project Settings > Service Accounts
FIREBASE_SERVICE_ACCOUNT_KEY='{\"type\":\"service_account\",\"project_id\":\"your-project\",...}'
# Alternative: path to service account file
GOOGLE_APPLICATION_CREDENTIALS=/path/to/firebase-service-account.json

# Web Push Configuration (for browser notifications)
# Generate these at: https://web-push-codelab.glitch.me/
VAPID_PUBLIC_KEY=your_vapid_public_key_here
VAPID_PRIVATE_KEY=your_vapid_private_key_here
VAPID_SUBJECT=mailto:admin@yourdomain.com

# ===================
# Common
# ===================
NODE_ENV=development
DEBUG=*

# ===================
# Production Notes
# ===================
# 1. Change JWT_SECRET to a strong random key
# 2. Set NODE_ENV=production
# 3. Configure proper Firebase credentials
# 4. Use external Redis in production
# 5. Set appropriate ALLOWED_ORIGINS
# 6. Consider using Docker secrets for sensitive data